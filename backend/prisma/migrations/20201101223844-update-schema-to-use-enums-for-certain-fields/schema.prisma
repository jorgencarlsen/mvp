datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [userId], references: [id])
  userId    Int?
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  password     String
  name         String?
  questions    Question[]
  Post         Post[]
  gitHubName   String?
  solutionRepo String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())
}

model Question {
  id             Int                 @id @default(autoincrement())
  title          String
  user           User?               @relation(fields: [userId], references: [id])
  userId         Int?
  url            String?
  algorithm      Algorithm[]
  dataStructure  DataStructureType[]
  solved         Boolean             @default(false)
  difficulty     Difficulty?
  userDifficulty Difficulty?
  notes          String?
  userSolution   String?
  solution       String?
  timeSpent      Int?
  createdAt      DateTime            @default(now())
  updatedAt      DateTime?           @default(now()) @updatedAt
}

enum DataStructureType {
  LINKED_LIST
  STACK
  QUEUE
  HASH_TABLE
  ARRAY
  STRING
  GRAPH
  TREE
  BINARY_TREE
  BINARY_SEARCH_TREE
  HEAP
  TRIE
}

enum Difficulty {
  VERY_EASY
  EASY
  MEDIUM
  HARD
  VERY_HARD
  EXTREMELY_HARD
}

enum Algorithm {
  DYNAMIC_PROGRAMMING
  POINTERS
  RECURSION
  PATH_FINDING
  GRAPH_TRAVERSAL
  SORTING
  SEARCHING
}
